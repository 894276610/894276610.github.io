<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>云居小栈</title>
    <link>https://894276610.github.io/</link>
    <description>Recent content on 云居小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Jul 2020 21:47:13 +0800</lastBuildDate>
    
	<atom:link href="https://894276610.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十四讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_14/</link>
      <pubDate>Sat, 18 Jul 2020 21:47:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_14/</guid>
      <description>第十四讲 服务Server的编程实现  第十四讲 服务Server的编程实现  创建服务端实现代码 配置服务端代码编译规则 编译并运行    创建服务端实现代码 turtle_command_server 缺少一个分号，需要补全
配置服务端代码编译规则 add_executable(turtle_command_server src/turtle_command_server.cpp) target_link_libraries(turtle_command_server ${catkin_LIBRARIES}) 编译并运行 cd ~/catkin_ws catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_command_server rosservice call /turtle_command &amp;quot;{}&amp;quot; rosservice call /turtle_command &amp;quot;{}&amp;quot; 参考资料
[1]古月ROS入门21讲——第十四讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十三讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_13/</link>
      <pubDate>Sat, 18 Jul 2020 21:22:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_13/</guid>
      <description>第十三讲 客户端Client的编程实现  第十三讲 客户端Client的编程实现  创建功能包 创建客户端代码 配置客户端代码编译规则 编译运行    创建功能包  cd ~/catkin_ws/src catkin_create_pkg learning_service roscpp rospy std_msgs geometry_msgs turtlesim 创建客户端代码  初始化ROS节点 创建Client实例 发布服务请求数据 等待Server处理之后的应答结果  配置客户端代码编译规则 功能包CMakeLists.txt
##build##
add_executable(turtle_spawn src/turtle_spawn.cpp) target_link_libraries(turtle_spawn ${catkin_LIBRARIES}) 编译运行 catkin_ws路径
catkin_make roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_spawn 参考资料
[1]古月ROS入门21讲——第十三讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十二讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_12/</link>
      <pubDate>Sat, 18 Jul 2020 18:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_12/</guid>
      <description>第十二讲 话题消息的定义与使用  第十二讲 话题消息的定义与使用  自定义话题消息 创建发布者代码 配置代码编译规则 编译并运行发布者和订阅者    自定义话题消息   定义msg文件 在learning_topic 中创建文件夹 msg
创建person.msg 文件
是 uint 不是 unit 别敲错了
## uint8 实在std_msgs 中做定义的第二步需配置 ## string name uint8 sex uint8 age uint8 unknown = 0 uint8 male = 1 uint8 female = 2   在package.xml 中添加功能包依赖
动态生成程序的依赖
&amp;lt;build_depend&amp;gt;message_generation&amp;lt;/build_depend&amp;gt; &amp;lt;exec_depend&amp;gt;message_runtime&amp;lt;/exec_depend&amp;gt; 粘贴到与其相同格式的地方
  在CMakeList.txt添加编译选项
find_package(... message_generation) ## Declare ROS Messages, services and actions ## add_message_files(FILES person.</description>
    </item>
    
    <item>
      <title>[Cpp]琐碎细节-待续</title>
      <link>https://894276610.github.io/post/studycpp/details/</link>
      <pubDate>Sat, 18 Jul 2020 15:53:46 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/studycpp/details/</guid>
      <description>namespace，是指标识符的各种可见范围
参考资料：
[1]命名空间-namespace含义</description>
    </item>
    
    <item>
      <title>[Cpp]Overload_operator</title>
      <link>https://894276610.github.io/post/studycpp/overload_operator/</link>
      <pubDate>Sat, 18 Jul 2020 13:46:53 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/studycpp/overload_operator/</guid>
      <description>新Tag引言：
电管专业只开C和JAVA两门编程语言课程。C++ 必然得自己啃完。
运算符重载 # include&amp;lt;iostream&amp;gt; using namespace std; class Fraction{ private: int numerator; //分子  int denominator; //分母  public : //Constructor  //No parameter  Fraction(); //Two parameter  Fraction(int,int); //copy type  Fraction(const Fraction &amp;amp;fraction1); //Destructor  ~Fraction(){} //friend function  friend Fraction operator /(Fraction &amp;amp;a, Fraction &amp;amp;b); //operator overloading  Fraction operator *(Fraction &amp;amp;a); Fraction operator +(Fraction &amp;amp;a); void show(){ cout&amp;lt;&amp;lt;numerator&amp;lt;&amp;lt;&amp;#34;\n&amp;#34;&amp;lt;&amp;lt;denominator&amp;lt;&amp;lt;&amp;#34;\n&amp;#34;; } }; //Constructor  //class_name :: class_name (parameter)  Fraction :: Fraction (){ numerator = 1; denominator = 1; } Fraction :: Fraction (int numerator, int denominator){ this-&amp;gt;numerator = numerator ; this-&amp;gt;denominator = denominator ; } Fraction :: Fraction (const Fraction &amp;amp;fraction1){ numerator = fraction1.</description>
    </item>
    
    <item>
      <title>[花絮]头像制作思路</title>
      <link>https://894276610.github.io/post/titlephoto/</link>
      <pubDate>Fri, 17 Jul 2020 21:53:46 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/titlephoto/</guid>
      <description>原始想法 最开始想使用微信头像
觉得过浅色图片和这个深色背景很不搭配
就&amp;hellip;另想办法
中间想法 使用黑白像素或者条纹风格图片
结果：拍出来发现实在不忍直视
最终版本 AppStore Portrait by img.iy (ios)
这款软件有傻瓜处理功能
恰好能刻画主要特征 省略次要特征（青春痘）
这个模板整体感觉还成，就用它了
参考资料： 无 （闲逛中收获的软件）</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十一讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_11/</link>
      <pubDate>Fri, 17 Jul 2020 20:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_11/</guid>
      <description>第十一讲 订阅者Subscriber的编程实现 1. 创建订阅者代码（C++）  初始化ROS节点 订阅需要的话题 循环等待话题消息 接收到消息后进入回调函数 在回调函数中完成消息处理  2. 配置功能包CMakeList.txt 功能包的build
CMakeList
 add_executable(pose_subscriber src/pose_subscriber.cpp) target_link_libraries(pose_subscriber ${catkin_LIBRARIES}) 3. 根目录做编译,运行发布者程序  catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_topic velocity_publisher 4. 运行订阅者程序 rosrun learning_topic pose_subscriber 参考资料 [1]古月ROS入门21讲——第十一讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_10/</link>
      <pubDate>Fri, 17 Jul 2020 13:21:15 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_10/</guid>
      <description>发布者publisher的编程实现  发布者publisher的编程实现  1. 创建功能包 2. 创建发布者代码（C++） 3. 编辑功能包的CMakeList.txt 文件 4. 编译并运行发布者 5. 运行测试 参考文献    1. 创建功能包 cd ~catkin_ws/src catkin_create_pkg learning_topic roscpp rospy std_msgs gepmetry_msgs turtlesim 2. 创建发布者代码（C++）  初始化ROS节点 向ROS Master 注册节点信息  话题名 话题消息类型   创建消息数据 按照一定频率循环发布消息 此处需要具备基本C++知识  3. 编辑功能包的CMakeList.txt 文件  在build部分添加 add_executable(velocity_publisher src/velocity_publisher.cpp) target_link_libraries(velocity_publisher ${catkin_LIBRARIES}) 第一行代码： 把.cpp 变成左边这个可执行文件
第二行代码： 把可执行文件与Ros库做链接 C++接口
  4. 编译并运行发布者 回到根目录空间下
cd ~/catkin_ws catkin_make source devel/setup.</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第九讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_09/</link>
      <pubDate>Fri, 17 Jul 2020 09:46:06 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_09/</guid>
      <description>创建工作空间与功能包  创建工作空间与功能包  工作空间 功能包    工作空间 工作空间存放工程文件
 src (source space) build (build space)
编译中间文件
基本不用关心 devel (development space)
编译的库和脚本 install (install space) 安装成功之后的位置   创建工作空间
创建文件夹-&amp;gt;进入文件夹-&amp;gt;将当前文件夹变成工作空间属性
mkdir -p ：递归创建目录，即使上级目录不存在，会按目录层级自动创建目录
init 操作之后， 会出现CMakeList.txt 文件，初始化成功  mkdir -p ~/catkin_ws（可自定义）/src cd ~/catkin_ws/src catkin_init_workspace 编译工作空间、功能包
回到根目录下-&amp;gt;做编译 编译src中的源码 结果： 产生devel, build 两个文件夹  cd ~/catkin_ws/ catkin_make 如果想要产生install 文件夹
catkin_make install 设置环境变量  source devel/setup.bash 检查环境变量
通过这个环境变量查找所有功能包的路径  echo $ROS_PACKAGE_PATH 功能包 放置ROS源码的最小单元</description>
    </item>
    
    <item>
      <title>[代码]Ros系统安装步骤</title>
      <link>https://894276610.github.io/post/ros_install_tips/</link>
      <pubDate>Thu, 16 Jul 2020 22:48:51 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/ros_install_tips/</guid>
      <description>当时安装ROS 18.04 困难重重
总体上是按照这个步骤走的
中间有几个步骤为ROS网站设置了本地DNS
具体记不太清了
都是在CSDN 找到的解决方案
1.
$ sudo sh -c &#39;echo &amp;quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&amp;quot; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&#39;   $ sudo apt-key adv --keyserver &#39;hkp://keyserver.ubuntu.com:80&#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654   $ sudo apt update $ sudo apt install ros-melodic-desktop-full（使用中科大镜像）   sudo rosdep init rosdep update   $ echo &amp;quot;source /opt/ros/melodic/setup.bash&amp;quot;&amp;gt;&amp;gt; ~/.bashrc $ source ~/.bashrc   $ sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential 参考资料： 古月ROS入门21讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第八讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_08/</link>
      <pubDate>Thu, 16 Jul 2020 21:50:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_08/</guid>
      <description>1. 第八讲 ROS 命令行的使用  1. 第八讲 ROS 命令行的使用  1.1. ROS 命令行工具  1.1.1. Workspace 相关命令 1.1.2. Package 相关命令 1.1.3. CMakeLists.txt 1.1.4. RUNNING SYSTEM   1.2. 启动小海龟 1.3. 分析小海龟话题和服务 1.4. 使用命令行工具让海龟动起来 （话题通讯） 1.5. 添加新海龟 （服务通讯） 1.6. 话题记录和复现 1.7. 参考文献（References）    1.1. ROS 命令行工具 常用命令
 rostopic rosservice rosnode rosparam rosmsg rossrv  1.1.1. Workspace 相关命令  Create workspace   mkdir catkin_ws &amp;amp;&amp;amp; cd catkin_ws wstool init src catkin_make source devel/setup.</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第七讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_07/</link>
      <pubDate>Thu, 16 Jul 2020 21:41:46 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_07/</guid>
      <description>第七讲 ROS核心概念  第七讲 ROS核心概念  通信机制：  节点(node): 节点管理器(ROS Master)：   话题通信  话题（Topic） 消息（Message）   服务通信 服务（service） 参数（Parameter）全局共享字典 文件系统  功能包（Package） 功能包清单（Package manifest） 元功能包（Meta Packages）   参考资料    通信机制： 节点(node): 执行单元
完成具体功能的进程
图像识别，图像驱动&amp;hellip;
可以分布在不同机器上
每一个节点的编程语言可不固定
可执行文件
节点在系统中的名称必须是统一的
节点管理器(ROS Master)： 控制中心
 为节点提供命名和注册服务 跟踪和记录话题/服务通信，辅助节点相互查找、建立连接 提供参数服务器（后面会讲）全局对象字典，节点使用此服务器存储和检索运行时的参数  话题通信 单向传输
话题（Topic）  节点之间用来传输数据的重要总线 使用发布/订阅模型，数据由发布者传输到订阅者，同一个话题的订阅者或发布者可以不唯一  消息（Message）  具有一定数据类型和数据结构，也可以自定义类型 使用编程语言无关的.msg 文件定义，编译过程中生成对应的代码文件  服务通信 有反馈的通讯
服务（service）  同步通信机制 使用客户端/服务器模型，客户端发送请求数据，服务器完成处理后返回应答数据； 使用编程语言无关的.</description>
    </item>
    
    <item>
      <title>Markdown基础</title>
      <link>https://894276610.github.io/post/markdownlanguage/</link>
      <pubDate>Tue, 14 Jul 2020 17:42:54 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/markdownlanguage/</guid>
      <description>Markdown编辑注重键盘操作，省去费时的鼠标操作，享受码字过程以及优质排版。
这篇博客简单记录一下基本的Markdown使用入门
 准备工作 基本操作 参考文献 其他花絮  准备工作 VS code有丰富的插件，可以支持Markdown编辑以及预览
其实还有很多专注Markdown文本编辑的软件
 Typora Joplin Cmd Markdown  如果你选择VS code, 那么可能需要安装以下插件：
 Markdown Toc 生成目录 Markdown All in One 实现基本语法 Markdown Preview Enhanced 实现预览效果
点击VS code 软件内图标输入相应插件并下载  基本操作   换行
行末加两个空格再按回车
  加粗，倾斜
**加粗** =&amp;gt; 加粗
快捷键 Ctrl + B
*倾斜* =&amp;gt; 倾斜
快捷键 Ctrl + I
  标题格式
### 三级标题
#### 四级标题
最多支持六级标题
  插入图片</description>
    </item>
    
    <item>
      <title>搭建博客(HUGO)</title>
      <link>https://894276610.github.io/post/hugo_try/</link>
      <pubDate>Tue, 14 Jul 2020 14:24:47 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/hugo_try/</guid>
      <description>这篇博客总结了使用HUGO在Linux系统搭建部署博客的基本步骤
关键词： HUGO LINUX GITHUB GIT
1. 下载安装HUGO 1.1 从Github下载HUGO安装包 Github的gohugo发布了一系列安装包
可以下载.deb 文件来安装到linux系统中
1.2 安装HUGO 在终端输入安装命令
sudo dpkg -i yourpackage.deb  2.建立本地站点 2.1让HUGO软件帮我们创建本地空站点 hugo new site yoursitename  2.2下载并应用网页主题 网页主题模板库地址：https://themes.gohugo.io/
选好模板，按照模板下方文档的提示GIT CLONE
在终端进入yoursitename/themes文件夹下
git clone UrlOfTheme  2.3创建本地站点草稿 hugo server -t yourtheme --buildDrafts  创建之后可以在本地端口1313查看网页
3.增加博客内容 3.1新建一篇博客 hugo new post/blogname.md  这个.md文件内容即为博客内容
3.2注意draft参数修改为false 在自动生成的日期下方一行有draft参数
为了在真正生成网页时看到博客内容
需要将其修改为
draft: false
4.建立GITHUB仓库 在github 新建仓库(repository)
仓库名称格式设为 yourgithubname.github.io
格式别弄错！
5.部署网页 5.1生成部署文件public hugo --theme=yourtheme --baseUrl=&amp;quot;https://yourgithubname.github.io/&amp;quot; --buildDrafts  5.</description>
    </item>
    
    <item>
      <title>Bolg</title>
      <link>https://894276610.github.io/post/firstblog/</link>
      <pubDate>Sun, 12 Jul 2020 15:01:05 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/firstblog/</guid>
      <description>This is my first blog! (憋说这个标题拼错了，这个标题就是这个设计)</description>
    </item>
    
  </channel>
</rss>
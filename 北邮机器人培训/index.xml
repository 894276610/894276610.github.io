<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>北邮机器人培训s on 云居小栈</title>
    <link>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/</link>
    <description>Recent content in 北邮机器人培训s on 云居小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 05 Aug 2020 15:49:29 +0800</lastBuildDate>
    
	<atom:link href="https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>tree命令</title>
      <link>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/01-tree/</link>
      <pubDate>Wed, 05 Aug 2020 15:49:29 +0800</pubDate>
      
      <guid>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/01-tree/</guid>
      <description>权限修改 sudo password root su root  安装tree命令 apt-get install tree  测试使用 tree //显示当前目录的子目录以及文件   效果展示：

参考资料： 北邮机器人队培训系列教程</description>
    </item>
    
    <item>
      <title></title>
      <link>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/02&#43;regular_expression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/02&#43;regular_expression/</guid>
      <description>一段时间没有使用正则表达式，又有一点记不清楚了
还是写点常用的加深印象
   字符 描述     * 匹配前面的子表达式零次或多次   + 匹配前面的子表达式一次或多次   ？ 匹配前面的子表达式零次或一次   [xyz] 字符集合。匹配包含的任意一个字符   [^a-z] 负值字符范围。匹配任何不在指定范围内的任意字符   \d 匹配一个数字字符   . 除了换行符的任意字符   ^ 匹配开头   $ 匹配结尾    #打开一个文本文件 f = open (&amp;#39;123.txt&amp;#39;) #如果行的开头是1，那么打印这一行 for line in f: if line.startwith(&amp;#39;1&amp;#39;) and line.endwith(&amp;#39;\n&amp;#39;): print(line) import re a1 = &amp;#39;23dadfjgv23472&amp;#39; b1 = re.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/02-calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/02-calculator/</guid>
      <description>这篇文档参考汇总预备队里大神的作业
作业1：计算器 设计python程序，输入字符串类型的数字运算，解析输出结果.
计算两个数加减乘除即可,可以使用库函数.
x = input() print(eval(x)) import re def calculation(str): # r表示其后的字符串按原样表示，不使用转义字符 pattern1=re.compile(r&amp;#39;-?\d+\.?-?\d*&amp;#39;) #regular expression 1 num = pattern1.findall(str) a=float(num[0]) b=float(num[1]) print(a,b) pattern2 = re.compile(r&amp;#39;[+\-\*\/]&amp;#39;)#regular expression 2 o = pattern2.findall(str,1) print(o) if o[0] == &amp;#39;+&amp;#39;: return a+b elif o[0] ==&amp;#39;-&amp;#39;: return a-b elif o[0] ==&amp;#39;*&amp;#39;: return a*b elif o[0] ==&amp;#39;/&amp;#39;: return a/b str = input() ans = calculation(str) print(ans) 使用python或c语言设计程序，已知三个控制点坐标（x1,y1）（x2,y2）（x3,y3）,规划一条路径
参考资料： 北邮机器人队2020预备队培训（二） —— python入门 python基础教程</description>
    </item>
    
    <item>
      <title></title>
      <link>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/02-path_planning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://894276610.github.io/%E5%8C%97%E9%82%AE%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9F%B9%E8%AE%AD/02-path_planning/</guid>
      <description>这篇文档参考汇总预备队里大神的作业
作业2：使用python或c语言设计程序，已知三个控制点坐标（x1,y1）（x2,y2）（x3,y3）,规划一条路径
新安装使用pycharm可能会出现numpy,matplotlib模块不存在的问题，
可以在terminal中安装相应的包
pip install numpy pip install matplotlib 首先是熟悉库函数的使用
 创建一个数组  import numpy as np a = np.array([1,2,3]) print(a)  创建一个多维数组  import numpy as np a = np.array([1,2],[3,4]) print(a)  最小维度  import numpy as np a = np.array([1,2,3,4,5],ndmin = 2) print(a)  参数设置  # dtype 参数  import numpy as np a = np.array([1,2,3], dtype = complex) print(a) 参考资料： numpy教程 北邮机器人队2020预备队培训（二） —— python入门 python基础教程</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>入门 on 云居小栈</title>
    <link>https://894276610.github.io/tags/%E5%85%A5%E9%97%A8/</link>
    <description>Recent content in 入门 on 云居小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 21 Jul 2020 01:55:45 +0800</lastBuildDate>
    
	<atom:link href="https://894276610.github.io/tags/%E5%85%A5%E9%97%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Notes21]Summary</title>
      <link>https://894276610.github.io/guyuero/guyueros21_21/</link>
      <pubDate>Tue, 21 Jul 2020 01:55:45 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_21/</guid>
      <description>第二十一讲 课程总结与进阶攻略  基础概述   课程介绍 Linux ROS系统安装  核心概念   什么是 ROS ROS 核心概念 ROS 命令行使用  编程基础   创建工作空间与功能包 话题、服务编程 参数使用与编程方法  常用组件   tf 坐标系统 launch 启动文件 常用可视化工具  进阶展望  机器人控制与仿真
Gazebo + ROS + ros_control
即时定位与地图建模
推荐资料：
 机器人控制与仿真 即时定位与地图建模_gmapping 即时定位与地图建模_hector  视频资料：
 斯坦福大学公开课&amp;ndash;机器人学 交通大学&amp;ndash;机器人学 Andrew Davison 机器人讲座课程 ROSl理论与实践(以移动机器人为例) ETH - Robotic Systems Lab ROS机械臂开发：从入门到实战  资源整理：
 ROS ROS Wiki ROSCon 2012-2019 ROS Robots Ubuntu Wiki 古月居 zhangrelay的专栏 易科机器人实验室 开源机器人学学习指南  google.</description>
    </item>
    
    <item>
      <title>[Notes20]Visual aids</title>
      <link>https://894276610.github.io/guyuero/guyueros21_20/</link>
      <pubDate>Tue, 21 Jul 2020 01:28:45 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_20/</guid>
      <description>第二十讲 常用可视化工具的使用 qt工具箱  rqt 综合工具 rqt_console 日志输出 rqt_graph 计算图 rqt_plot 数据绘图 rqt_image_view 图像渲染  Rviz 机器人开发过程中的数据可视化界面 数据显示平台，得要有数据
roscore rosrun rviz rviz (直接输入rviz 也行)
三维物理仿真平台  测试机器人算法 机器人设计 显示情景下的回溯测试  roslaunch gazebo_ros willowgarage_world.launch 参考资料
[1]古月ROS入门21讲——第二十讲</description>
    </item>
    
    <item>
      <title>[Notes19]launch file</title>
      <link>https://894276610.github.io/guyuero/guyueros21_19/</link>
      <pubDate>Mon, 20 Jul 2020 22:45:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_19/</guid>
      <description>第十九讲 launch 启动文件的使用方法 launch 文件常用语法 功能：通过xml文件实现多节点的配置和启动
 launch文件中的根元素采用标签定义
 启动节点
&amp;lt;node pkg=&amp;#34;package-name&amp;#34; type=“executable-name” name=&amp;#34;node-name&amp;#34; /&amp;gt; 三个基础属性
 name：节点运行时的名称。取代节点初始化的节点名，防止重名。 pkg: 节点的功能包名称 type: 节点可执行文件名称  其他一些可选命令
 output
是否要打印日志信息 respawn 是否要重启 required
是否必须启动 ns
解决命名冲突 args
给每个节点输入参数  / 参数设置
设置ROS系统运行中的参数,存储在参数服务器中
&amp;lt;param name=&amp;#34;output_frame&amp;#34; value=&amp;#34;odom&amp;#34; /&amp;gt;  name: 参数名 value:参数值
加载参数文件中的多个参数  &amp;lt;rosparam file=&amp;#34;params.yaml&amp;#34; command=&amp;#34;load&amp;#34; ns= &amp;#34;params&amp;#34; /&amp;gt; 调用：
 launch 文件内部的局部变量，仅限于launch文件使用
&amp;lt;arg name=&amp;#34;arg-name&amp;#34; default=&amp;#34;arg-value&amp;#34; /&amp;gt;  name: 参数名 value: 参数值  重映射 重映射ROS计算图资源的命名</description>
    </item>
    
    <item>
      <title>[Notes18]Broadcaster and listener</title>
      <link>https://894276610.github.io/guyuero/guyueros21_18/</link>
      <pubDate>Mon, 20 Jul 2020 21:49:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_18/</guid>
      <description>第十八讲 tf坐标系广播与监听的编程实现  创建功能包  cd ~/catkin_ws/src catkin_create_pkg learning_tf roscpp cospy tf turtlesim  创建tf广播器代码（C++）
  创建tf监听器代码（C++） 代码
  配置CMakeList编译规则
    设置要编译的代码和可执行文件
  设置链接库
add_executable(turtle_tf_broadcaster src/turtle_tf_broadcaster.cpp) target_link_libraries(turtle_tf_broadcaster ${catkin_LIBRARIES}) add_executable(turtle_tf_listener src/turtle_tf_broadcaster.cpp) target_link_libraries(turtle_tf_listener ${catkinLIBRARIES})   在根目录编译运行 catkin_make
重映射：两个下划线加name:=  catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_tf turtle_tf_broadcaster __name:=turtle1_tf_broadcaster /turtle1 rosrun learning_tf turtle_tf_broadcaster __name:=turtle2_tf_broadcaster /turtle2 rosrun learning_tf turtle_tf_listener rosrun turtlesim turtle_teleop_key 参考资料
[1]古月ROS入门21讲——第十八讲 [2]机器人学导论——分析、系统及应用 [3]机器人导论（原书第三版）</description>
    </item>
    
    <item>
      <title>[Notes17]Transformation</title>
      <link>https://894276610.github.io/guyuero/guyueros21_17/</link>
      <pubDate>Mon, 20 Jul 2020 16:49:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_17/</guid>
      <description>ROS中的坐标系管理系统 机器人中的坐标变换 跟随同步的例程
sudo apt-get install ros-melodic-turtle-tf roslaunch turtle_tf turtle_tf_demo.launch rosrun turtlesim turtle_teleop_key rosrun tf view_frames 命令行工具
rosrun tf tf_echo turtle1 turtle2 可视化工具
rosrun rviz rviz -d `rospack find turtle_tf` /rviz/turtle_rviz.rviz Add world coordination
参考资料
[1]古月ROS入门21讲——第十七讲 [2]机器人学导论——分析、系统及应用 [3]机器人导论（原书第三版）</description>
    </item>
    
    <item>
      <title>[Notes16]Parameters</title>
      <link>https://894276610.github.io/guyuero/guyueros21_16/</link>
      <pubDate>Mon, 20 Jul 2020 15:40:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_16/</guid>
      <description>第十六讲 参数的使用与编程方法 参数模型 Ros Master
 Parameter Server (全局字典)  /robot_name:&amp;ldquo;my_robot&amp;rdquo; /robot_radius:0.4 /robot_height:0.5    参数模型使用方法  创建功能包(第10、13讲也有类似步骤)  cd ~/catkin_ws/src catkin_crete_pkg learning_parameter roscpp rospy std_srvs 参数命令行使用   yaml 参数文件  background_b:255 background_g:86 background_r:69 rosdistro:&amp;#39;melodic&amp;#39; roslaunch: uris:{host_hcx_vpc__43763:&amp;#39;http://hcx-vpc:43763/&amp;#39;} rosversion:&amp;#39;1.14.3&amp;#39; run_id:........  列出当前所有参数
rosparam list 显示某个参数值 rosparam get param_key 设置某个参数值
rosparam set param_key param_value 保存参数到文件
rosparam dump file_name 从文件读取参数 rosparam load file_name 删除参数
rosparam delete param_key  小海龟例：
roscore rosrun turtlesim turtlesim_node rosparam list rosparam get /background_b rosparam get /background_g rosparam get /rosdistro rosparam get /rosversion rosparam set /background_b 100 请求服务之后才会更改背景值</description>
    </item>
    
    <item>
      <title>[Notes15]define service</title>
      <link>https://894276610.github.io/guyuero/guyueros21_15/</link>
      <pubDate>Mon, 20 Jul 2020 15:20:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_15/</guid>
      <description>第十五讲 服务数据的定义与使用 自定义数据类型并且使用
自定义服务数据
定义服务数据  定义srv
三个横线以上是request以下是response数据 在learning_service文件夹中创建srv文件夹
并在里面新建Person.srv 文件  string name uint8 age uint8 sex uint8 unknown = 0 uint8 male = 1 uint8 female = 2 --- string result  package.xml中添加功能包依赖
动态生成程序的依赖
这一步和第十二讲中service的实现是类似的
&amp;lt;build_depend&amp;gt;message_generation&amp;lt;/build_depend&amp;gt; &amp;lt;exec_depend&amp;gt;message_runtime&amp;lt;/exec_depend&amp;gt;   在CMakeList.txt添加编译选项
除了需要修改为.srv文件以外
这一步和第十二讲中service的实现是类似的
find_package(... message_generation) ## Declare ROS Messages, services and actions ## add_message_files(FILES person.srv) generate_messages(DEPENDENCIES std_msgs) catkin_package(CATKIN_DEPENDS ... message_runtime)   编译生成语言相关文件
   catkin_make （查看生成的代码文件）
devel/include/learning_service/  Person.</description>
    </item>
    
    <item>
      <title>[Notes14]Server</title>
      <link>https://894276610.github.io/guyuero/guyueros21_14/</link>
      <pubDate>Sat, 18 Jul 2020 21:47:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_14/</guid>
      <description>第十四讲 服务Server的编程实现  第十四讲 服务Server的编程实现  创建服务端实现代码 配置服务端代码编译规则 编译并运行    创建服务端实现代码 turtle_command_server 缺少一个分号，需要补全
配置服务端代码编译规则 add_executable(turtle_command_server src/turtle_command_server.cpp) target_link_libraries(turtle_command_server ${catkin_LIBRARIES}) 编译并运行 cd ~/catkin_ws catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_command_server rosservice call /turtle_command &amp;quot;{}&amp;quot; rosservice call /turtle_command &amp;quot;{}&amp;quot; 参考资料
[1]古月ROS入门21讲——第十四讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十四讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_14/</link>
      <pubDate>Sat, 18 Jul 2020 21:47:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_14/</guid>
      <description>第十四讲 服务Server的编程实现  第十四讲 服务Server的编程实现  创建服务端实现代码 配置服务端代码编译规则 编译并运行    创建服务端实现代码 turtle_command_server 缺少一个分号，需要补全
配置服务端代码编译规则 add_executable(turtle_command_server src/turtle_command_server.cpp) target_link_libraries(turtle_command_server ${catkin_LIBRARIES}) 编译并运行 cd ~/catkin_ws catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_command_server rosservice call /turtle_command &amp;quot;{}&amp;quot; rosservice call /turtle_command &amp;quot;{}&amp;quot; 参考资料
[1]古月ROS入门21讲——第十四讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十四讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_15/</link>
      <pubDate>Sat, 18 Jul 2020 21:47:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_15/</guid>
      <description>第十四讲 服务Server的编程实现  第十四讲 服务Server的编程实现  创建服务端实现代码 配置服务端代码编译规则 编译并运行    创建服务端实现代码 turtle_command_server 缺少一个分号，需要补全
配置服务端代码编译规则 add_executable(turtle_command_server src/turtle_command_server.cpp) target_link_libraries(turtle_command_server ${catkin_LIBRARIES}) 编译并运行 cd ~/catkin_ws catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_command_server rosservice call /turtle_command &amp;quot;{}&amp;quot; rosservice call /turtle_command &amp;quot;{}&amp;quot; 参考资料
[1]古月ROS入门21讲——第十四讲</description>
    </item>
    
    <item>
      <title>[Notes13]Client</title>
      <link>https://894276610.github.io/guyuero/guyueros21_13/</link>
      <pubDate>Sat, 18 Jul 2020 21:22:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_13/</guid>
      <description>第十三讲 客户端Client的编程实现  第十三讲 客户端Client的编程实现  创建功能包 创建客户端代码 配置客户端代码编译规则 编译运行    创建功能包  cd ~/catkin_ws/src catkin_create_pkg learning_service roscpp rospy std_msgs geometry_msgs turtlesim 创建客户端代码  初始化ROS节点 创建Client实例 发布服务请求数据 等待Server处理之后的应答结果  配置客户端代码编译规则 功能包CMakeLists.txt
##build##
add_executable(turtle_spawn src/turtle_spawn.cpp) target_link_libraries(turtle_spawn ${catkin_LIBRARIES}) 编译运行 catkin_ws路径
catkin_make roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_spawn 参考资料
[1]古月ROS入门21讲——第十三讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十三讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_13/</link>
      <pubDate>Sat, 18 Jul 2020 21:22:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_13/</guid>
      <description>第十三讲 客户端Client的编程实现  第十三讲 客户端Client的编程实现  创建功能包 创建客户端代码 配置客户端代码编译规则 编译运行    创建功能包  cd ~/catkin_ws/src catkin_create_pkg learning_service roscpp rospy std_msgs geometry_msgs turtlesim 创建客户端代码  初始化ROS节点 创建Client实例 发布服务请求数据 等待Server处理之后的应答结果  配置客户端代码编译规则 功能包CMakeLists.txt
##build##
add_executable(turtle_spawn src/turtle_spawn.cpp) target_link_libraries(turtle_spawn ${catkin_LIBRARIES}) 编译运行 catkin_ws路径
catkin_make roscore rosrun turtlesim turtlesim_node rosrun learning_service turtle_spawn 参考资料
[1]古月ROS入门21讲——第十三讲</description>
    </item>
    
    <item>
      <title>[Note12&#43;]Topic_define</title>
      <link>https://894276610.github.io/guyuero/guyueros21_12&#43;/</link>
      <pubDate>Sat, 18 Jul 2020 18:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_12&#43;/</guid>
      <description>第十二讲 话题消息的定义与使用  第十二讲 话题消息的定义与使用  自定义话题消息 创建发布者代码 配置代码编译规则 编译并运行发布者和订阅者    自定义话题消息   定义msg文件 在learning_topic 中 msg文件夹下
创建Phone.msg 文件
是 uint 不是 unit 别敲错了
## uint8 实在std_msgs 中做定义的第二步需配置 ## string brand uint8 price uint8 sizes uint8 big = 0 uint8 small = 1   在package.xml 中添加功能包依赖
动态生成程序的依赖
（这个部分写过就不用重复写辽）
&amp;lt;build_depend&amp;gt;message_generation&amp;lt;/build_depend&amp;gt; &amp;lt;exec_depend&amp;gt;message_runtime&amp;lt;/exec_depend&amp;gt; 粘贴到与其相同格式的地方
  在CMakeList.txt添加编译选项
注意：先把相似的add完再generate
find_package(... message_generation) ## Declare ROS Messages, services and actions ## add_message_files(FILES Person.</description>
    </item>
    
    <item>
      <title>[Notes12]Topic define</title>
      <link>https://894276610.github.io/guyuero/guyueros21_12/</link>
      <pubDate>Sat, 18 Jul 2020 18:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_12/</guid>
      <description>第十二讲 话题消息的定义与使用  第十二讲 话题消息的定义与使用  自定义话题消息 创建发布者代码 配置代码编译规则 编译并运行发布者和订阅者    自定义话题消息   定义msg文件 在learning_topic 中创建文件夹 msg
创建person.msg 文件
是 uint 不是 unit 别敲错了
## uint8 实在std_msgs 中做定义的第二步需配置 ## string name uint8 sex uint8 age uint8 unknown = 0 uint8 male = 1 uint8 female = 2   在package.xml 中添加功能包依赖
动态生成程序的依赖
&amp;lt;build_depend&amp;gt;message_generation&amp;lt;/build_depend&amp;gt; &amp;lt;exec_depend&amp;gt;message_runtime&amp;lt;/exec_depend&amp;gt; 粘贴到与其相同格式的地方
  在CMakeList.txt添加编译选项
find_package(... message_generation) ## Declare ROS Messages, services and actions ## add_message_files(FILES person.</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十二讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_12/</link>
      <pubDate>Sat, 18 Jul 2020 18:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_12/</guid>
      <description>第十二讲 话题消息的定义与使用  第十二讲 话题消息的定义与使用  自定义话题消息 创建发布者代码 配置代码编译规则 编译并运行发布者和订阅者    自定义话题消息   定义msg文件 在learning_topic 中创建文件夹 msg
创建person.msg 文件
是 uint 不是 unit 别敲错了
## uint8 实在std_msgs 中做定义的第二步需配置 ## string name uint8 sex uint8 age uint8 unknown = 0 uint8 male = 1 uint8 female = 2   在package.xml 中添加功能包依赖
动态生成程序的依赖
&amp;lt;build_depend&amp;gt;message_generation&amp;lt;/build_depend&amp;gt; &amp;lt;exec_depend&amp;gt;message_runtime&amp;lt;/exec_depend&amp;gt; 粘贴到与其相同格式的地方
  在CMakeList.txt添加编译选项
find_package(... message_generation) ## Declare ROS Messages, services and actions ## add_message_files(FILES person.</description>
    </item>
    
    <item>
      <title>[Notes11]Subscriber</title>
      <link>https://894276610.github.io/guyuero/guyueros21_11/</link>
      <pubDate>Fri, 17 Jul 2020 20:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_11/</guid>
      <description>第十一讲 订阅者Subscriber的编程实现 1. 创建订阅者代码（C++）  初始化ROS节点 订阅需要的话题 循环等待话题消息 接收到消息后进入回调函数 在回调函数中完成消息处理  2. 配置功能包CMakeList.txt 功能包的build
CMakeList
 add_executable(pose_subscriber src/pose_subscriber.cpp) target_link_libraries(pose_subscriber ${catkin_LIBRARIES}) 3. 根目录做编译,运行发布者程序  catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_topic velocity_publisher 4. 运行订阅者程序 rosrun learning_topic pose_subscriber 参考资料 [1]古月ROS入门21讲——第十一讲</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十一讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_11/</link>
      <pubDate>Fri, 17 Jul 2020 20:52:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_11/</guid>
      <description>第十一讲 订阅者Subscriber的编程实现 1. 创建订阅者代码（C++）  初始化ROS节点 订阅需要的话题 循环等待话题消息 接收到消息后进入回调函数 在回调函数中完成消息处理  2. 配置功能包CMakeList.txt 功能包的build
CMakeList
 add_executable(pose_subscriber src/pose_subscriber.cpp) target_link_libraries(pose_subscriber ${catkin_LIBRARIES}) 3. 根目录做编译,运行发布者程序  catkin_make source devel/setup.bash roscore rosrun turtlesim turtlesim_node rosrun learning_topic velocity_publisher 4. 运行订阅者程序 rosrun learning_topic pose_subscriber 参考资料 [1]古月ROS入门21讲——第十一讲</description>
    </item>
    
    <item>
      <title>[Notes]古月ROS_10</title>
      <link>https://894276610.github.io/guyuero/guyueros21_10/</link>
      <pubDate>Fri, 17 Jul 2020 13:21:15 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_10/</guid>
      <description>发布者publisher的编程实现  发布者publisher的编程实现  1. 创建功能包 2. 创建发布者代码（C++） 3. 编辑功能包的CMakeList.txt 文件 4. 编译并运行发布者 5. 运行测试 参考文献    1. 创建功能包 cd ~catkin_ws/src catkin_create_pkg learning_topic roscpp rospy std_msgs gepmetry_msgs turtlesim 2. 创建发布者代码（C++）  初始化ROS节点 向ROS Master 注册节点信息  话题名 话题消息类型   创建消息数据 按照一定频率循环发布消息 此处需要具备基本C++知识  /* Copyright 2020 GuYueHome (www.guyuehome.com).*/ /* 该例程将发布turtle1/cmd_vel话题，消息类型geometry_msgs::Twist*/ #include &amp;lt;ros/ros.h&amp;gt;#include &amp;lt;geometry_msgs/Twist.h&amp;gt; int main(int argc, char **argv) { // ROS节点初始化  //设置节点名称  ros::init(argc, argv, &amp;#34;velocity_publisher&amp;#34;); // 创建节点句柄  //管理ROS API 资源，后续调用需要用到  ros::NodeHandle n; // 创建一个Publisher，发布名为/turtle1/cmd_vel的topic，消息类型为geometry_msgs::Twist，队列长度10  ros::Publisher turtle_vel_pub = n.</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第十讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_10/</link>
      <pubDate>Fri, 17 Jul 2020 13:21:15 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_10/</guid>
      <description>发布者publisher的编程实现  发布者publisher的编程实现  1. 创建功能包 2. 创建发布者代码（C++） 3. 编辑功能包的CMakeList.txt 文件 4. 编译并运行发布者 5. 运行测试 参考文献    1. 创建功能包 cd ~catkin_ws/src catkin_create_pkg learning_topic roscpp rospy std_msgs gepmetry_msgs turtlesim 2. 创建发布者代码（C++）  初始化ROS节点 向ROS Master 注册节点信息  话题名 话题消息类型   创建消息数据 按照一定频率循环发布消息 此处需要具备基本C++知识  3. 编辑功能包的CMakeList.txt 文件  在build部分添加 add_executable(velocity_publisher src/velocity_publisher.cpp) target_link_libraries(velocity_publisher ${catkin_LIBRARIES}) 第一行代码： 把.cpp 变成左边这个可执行文件
第二行代码： 把可执行文件与Ros库做链接 C++接口
  4. 编译并运行发布者 回到根目录空间下
cd ~/catkin_ws catkin_make source devel/setup.</description>
    </item>
    
    <item>
      <title>[Notes9]Workspace and package</title>
      <link>https://894276610.github.io/guyuero/guyueros21_09/</link>
      <pubDate>Fri, 17 Jul 2020 09:46:06 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_09/</guid>
      <description>创建工作空间与功能包  创建工作空间与功能包  工作空间 功能包    工作空间 工作空间存放工程文件
 src (source space) build (build space)
编译中间文件
基本不用关心 devel (development space)
编译的库和脚本 install (install space) 安装成功之后的位置   创建工作空间
创建文件夹-&amp;gt;进入文件夹-&amp;gt;将当前文件夹变成工作空间属性
mkdir -p ：递归创建目录，即使上级目录不存在，会按目录层级自动创建目录
init 操作之后， 会出现CMakeList.txt 文件，初始化成功  mkdir -p ~/catkin_ws（可自定义）/src cd ~/catkin_ws/src catkin_init_workspace 编译工作空间、功能包
回到根目录下-&amp;gt;做编译 编译src中的源码 结果： 产生devel, build 两个文件夹  cd ~/catkin_ws/ catkin_make 如果想要产生install 文件夹
catkin_make install 设置环境变量  source devel/setup.bash 检查环境变量
通过这个环境变量查找所有功能包的路径  echo $ROS_PACKAGE_PATH 功能包 放置ROS源码的最小单元</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第九讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_09/</link>
      <pubDate>Fri, 17 Jul 2020 09:46:06 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_09/</guid>
      <description>创建工作空间与功能包  创建工作空间与功能包  工作空间 功能包    工作空间 工作空间存放工程文件
 src (source space) build (build space)
编译中间文件
基本不用关心 devel (development space)
编译的库和脚本 install (install space) 安装成功之后的位置   创建工作空间
创建文件夹-&amp;gt;进入文件夹-&amp;gt;将当前文件夹变成工作空间属性
mkdir -p ：递归创建目录，即使上级目录不存在，会按目录层级自动创建目录
init 操作之后， 会出现CMakeList.txt 文件，初始化成功  mkdir -p ~/catkin_ws（可自定义）/src cd ~/catkin_ws/src catkin_init_workspace 编译工作空间、功能包
回到根目录下-&amp;gt;做编译 编译src中的源码 结果： 产生devel, build 两个文件夹  cd ~/catkin_ws/ catkin_make 如果想要产生install 文件夹
catkin_make install 设置环境变量  source devel/setup.bash 检查环境变量
通过这个环境变量查找所有功能包的路径  echo $ROS_PACKAGE_PATH 功能包 放置ROS源码的最小单元</description>
    </item>
    
    <item>
      <title>[Notes8]Ros Command Line</title>
      <link>https://894276610.github.io/guyuero/guyueros21_08/</link>
      <pubDate>Thu, 16 Jul 2020 21:50:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_08/</guid>
      <description>1. 第八讲 ROS 命令行的使用  1. 第八讲 ROS 命令行的使用  1.1. ROS 命令行工具  1.1.1. Workspace 相关命令 1.1.2. Package 相关命令   1.7. 参考文献（References）    1.1. ROS 命令行工具 常用命令
 rostopic rosservice rosnode rosparam rosmsg rossrv  1.1.1. Workspace 相关命令  Create workspace   mkdir catkin_ws &amp;amp;&amp;amp; cd catkin_ws wstool init src catkin_make source devel/setup.bash  catkin_make是在catkin工作区中构建代码的便捷工具。 catkin_make遵循catkin工作区的标准布局 source命令功能：使Shell读入指定的Shell程序文件并依次执行文件中的所有语句 source命令通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录  Add Repo to Workspace roscd; cd .</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第八讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_08/</link>
      <pubDate>Thu, 16 Jul 2020 21:50:13 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_08/</guid>
      <description>1. 第八讲 ROS 命令行的使用  1. 第八讲 ROS 命令行的使用  1.1. ROS 命令行工具  1.1.1. Workspace 相关命令 1.1.2. Package 相关命令 1.1.3. CMakeLists.txt 1.1.4. RUNNING SYSTEM   1.2. 启动小海龟 1.3. 分析小海龟话题和服务 1.4. 使用命令行工具让海龟动起来 （话题通讯） 1.5. 添加新海龟 （服务通讯） 1.6. 话题记录和复现 1.7. 参考文献（References）    1.1. ROS 命令行工具 常用命令
 rostopic rosservice rosnode rosparam rosmsg rossrv  1.1.1. Workspace 相关命令  Create workspace   mkdir catkin_ws &amp;amp;&amp;amp; cd catkin_ws wstool init src catkin_make source devel/setup.</description>
    </item>
    
    <item>
      <title>[Notes7]Ros Concept</title>
      <link>https://894276610.github.io/guyuero/guyueros21_07/</link>
      <pubDate>Thu, 16 Jul 2020 21:41:46 +0800</pubDate>
      
      <guid>https://894276610.github.io/guyuero/guyueros21_07/</guid>
      <description>第七讲 ROS核心概念  第七讲 ROS核心概念  通信机制：  节点(node): 节点管理器(ROS Master)：   话题通信  话题（Topic） 消息（Message）   服务通信 服务（service） 参数（Parameter）全局共享字典 文件系统  功能包（Package） 功能包清单（Package manifest） 元功能包（Meta Packages）   参考资料    通信机制： 节点(node): 执行单元
完成具体功能的进程
图像识别，图像驱动&amp;hellip;
可以分布在不同机器上
每一个节点的编程语言可不固定
可执行文件
节点在系统中的名称必须是统一的
节点管理器(ROS Master)： 控制中心
 为节点提供命名和注册服务 跟踪和记录话题/服务通信，辅助节点相互查找、建立连接 提供参数服务器（后面会讲）全局对象字典，节点使用此服务器存储和检索运行时的参数  话题通信 单向传输
话题（Topic）  节点之间用来传输数据的重要总线 使用发布/订阅模型，数据由发布者传输到订阅者，同一个话题的订阅者或发布者可以不唯一  消息（Message）  具有一定数据类型和数据结构，也可以自定义类型 使用编程语言无关的.msg 文件定义，编译过程中生成对应的代码文件  服务通信 有反馈的通讯
服务（service）  同步通信机制 使用客户端/服务器模型，客户端发送请求数据，服务器完成处理后返回应答数据； 使用编程语言无关的.</description>
    </item>
    
    <item>
      <title>[学习笔记]古月ROS入门21讲——第七讲</title>
      <link>https://894276610.github.io/post/guyueros21/guyueros21_07/</link>
      <pubDate>Thu, 16 Jul 2020 21:41:46 +0800</pubDate>
      
      <guid>https://894276610.github.io/post/guyueros21/guyueros21_07/</guid>
      <description>第七讲 ROS核心概念  第七讲 ROS核心概念  通信机制：  节点(node): 节点管理器(ROS Master)：   话题通信  话题（Topic） 消息（Message）   服务通信 服务（service） 参数（Parameter）全局共享字典 文件系统  功能包（Package） 功能包清单（Package manifest） 元功能包（Meta Packages）   参考资料    通信机制： 节点(node): 执行单元
完成具体功能的进程
图像识别，图像驱动&amp;hellip;
可以分布在不同机器上
每一个节点的编程语言可不固定
可执行文件
节点在系统中的名称必须是统一的
节点管理器(ROS Master)： 控制中心
 为节点提供命名和注册服务 跟踪和记录话题/服务通信，辅助节点相互查找、建立连接 提供参数服务器（后面会讲）全局对象字典，节点使用此服务器存储和检索运行时的参数  话题通信 单向传输
话题（Topic）  节点之间用来传输数据的重要总线 使用发布/订阅模型，数据由发布者传输到订阅者，同一个话题的订阅者或发布者可以不唯一  消息（Message）  具有一定数据类型和数据结构，也可以自定义类型 使用编程语言无关的.msg 文件定义，编译过程中生成对应的代码文件  服务通信 有反馈的通讯
服务（service）  同步通信机制 使用客户端/服务器模型，客户端发送请求数据，服务器完成处理后返回应答数据； 使用编程语言无关的.</description>
    </item>
    
  </channel>
</rss>